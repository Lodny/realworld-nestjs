// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())

  username  String  @unique
  email     String  @unique
  password  String
  bio       String?
  image     String?

  posts     Article[]
  followers Follow[] @relation("UserFollowers")
  follows   Follow[] @relation("UserFollows")
  favorites Favorite[]
  comments  Comment[]
}

model Follow {
  id         Int    @id @default(autoincrement())

  follower   User   @relation("UserFollowers", fields: [followerId], references: [id])
  followerId Int
  following  User   @relation("UserFollows", fields: [followingId], references: [id])
  followingId Int

  @@unique([followerId, followingId])
}

model Article {
  id          Int        @id @default(autoincrement())

  title       String
  slug        String     @unique
  description String
  body        String

  tags        Tag[]

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  author      User       @relation(fields: [authorId], references: [id])
  authorId    Int

  comments    Comment[]
  favorites   Favorite[]
}

model Tag {
  id       Int    @id @default(autoincrement())
  name     String
  articles Article[]
}

model Favorite {
  id         Int      @id @default(autoincrement())
  article    Article  @relation(fields: [articleId], references: [id])
  articleId  Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int

  @@unique([articleId, userId])
}

model Comment {
  id         Int    @id @default(autoincrement())
  body       String
  article    Article   @relation(fields: [articleId], references: [id])
  articleId  Int
  user       User   @relation(fields: [userId], references: [id])
  userId     Int
}
